name: Release new version to CurseForge
on:
  push:
    branches:
      - master
jobs:
  release:
    if: "contains(github.event.head_commit.message, 'release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        id: set_env
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: echo ::set-env name=version::0.2
      - name: "Delete CurseForge restricted files"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          mkdir sArena_Updated2_by_sammers 
          cp -R Ace3 sArena_Updated2_by_sammers/
          cp -R Layouts sArena_Updated2_by_sammers/
          cp -R Modules sArena_Updated2_by_sammers/
          cp Config.lua sArena_Updated2_by_sammers/
          cp LICENSE.txt sArena_Updated2_by_sammers/
          cp sArena_Updated2_by_sammers.toc sArena_Updated2_by_sammers/
          cp sArena.lua sArena_Updated2_by_sammers/
          cp sArena.xml sArena_Updated2_by_sammers/
          zip -vr sArena_Updated2_by_sammers.zip sArena_Updated2_by_sammers/
      - name: "Create Github Release"
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.set_env.outputs.version }}
          tag_name: ${{ steps.set_env.outputs.version }}
          body: "Relesing version ${{ steps.set_env.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: "Upload sArena artifact to release"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sArena_Updated2_by_sammers.zip
          asset_name: sArena_Updated2_by_sammers.zip
          asset_content_type: application/zip
      # - name: "Upload to CurseForge"
      #   uses: itsmeow/curseforge-upload@v3
      #   with: 
      #     file_path: "sArena_Updated2_by_sammers-$RELEASE_VERSION.zip"
      #     game_endpoint: "worldofwarcraft"
      #     game_versions: ""
      #     project_id: 0
      #     token: "${{ secrets.CF_API_TOKEN }}"